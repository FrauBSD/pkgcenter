.\" Copyright (c) 2018 Devin Teske <dteske@FreeBSD.org>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FrauBSD: pkgcenter/depend/libcmb/cmb.3 2018-12-18 03:42:17 -0800 freebsdfrau $
.\" $FreeBSD$
.\"
.Dd December 19, 2018
.Dt CMB 3
.Os
.Sh NAME
.Nm cmb
.Nd combinatorics library
.Sh LIBRARY
.Lb libcmb
.Sh SYNOPSIS
.In cmb.h
.Ft int
.Fn cmb "struct cmb_config *config" "uint32_t nitems" "char *items[]"
.Ft uint64_t
.Fn cmb_count "struct cmb_config *config" "uint32_t nitems"
.Ft char **
.Fn cmb_parse "struct cmb_config *config" "int fd" "uint32_t *nitems" "uint32_t max"
.Ft char **
.Fn cmb_parse_file "struct cmb_config *config" "char *path" "uint32_t *nitems" "uint32_t max"
.Ft int
.Fn cmb_print "struct cmb_config *config" "uint64_t seq" "uint32_t nitems" "char *items[]"
.Ft const char *
.Fn cmb_version "int type"
.Pp
/* OpenSSL
.Xr bn 3
support */
.Pp
.Ft int
.Fn cmb_bn "struct cmb_config *config" "uint32_t nitems" "char *items[]"
.Ft "BIGNUM *"
.Fn cmb_count_bn "struct cmb_config *config" "uint32_t nitems"
.Ft int
.Fn cmb_print_bn "struct cmb_config *config" "BIGNUM *seq" "uint32_t nitems" "char *items[]"
.Sh DESCRIPTION
The
.Nm
library provides a light-weight,
portable,
and fast interface for enumerating combinations.
.Pp
Anatomy of config argument to
.Fn cmb* :
.Bd -literal -offset indent
struct cmb_config {
    uint8_t debug;         /* Enable debugging if non-zero */
    uint8_t nul_terminate; /* Terminate combinations with NUL */
    uint8_t show_empty;    /* Show empty set with no items */
    uint8_t show_numbers;  /* Show combination sequence numbers */
    char    *delimiter;    /* Item separator (default is " ") */
    char    *prefix;       /* Prefix for each combination */
    char    *suffix;       /* Suffix for each combination */
    uint32_t size_min;     /* Minimum elements in combination */
    uint32_t size_max;     /* Maximum elements in combination */

    uint64_t count;        /* Number of combinations */
    uint64_t start;        /* Starting combination */

    /*
     * cmb(3) function callback; called for each combination
     * (default is cmb_print()). If the return from action() is non-
     * zero, cmb() will stop calculation. The cmb() return value is
     * the first non-zero result from action(), zero otherwise.
     */
    int (*action)(struct cmb_config *config, uint32_t nitems,
        char *items[]);

    /* OpenSSL bn(3) support */

    BIGNUM  *count_bn;     /* Number of combinations */
    BIGNUM  *start_bn;     /* Starting combination */

    /*
     * cmb_bn(3) function callback; called for each combination
     * (default is cmb_print_bn()). If the return from action_bn()
     * is non-zero, cmb_bn() will stop calculation. The cmb_bn()
     * return value is the first non-zero result from action_bn(),
     * zero otherwise.
     */
    int (*action_bn)(struct cmb_config *config, BIGNUM *seq,
        uint32_t nitems, char *items[]);
};
.Ed
.Pp
If
.Ar debug
is non-zero and
.Xr cmb 3
was compiled with
.Ql CMB_DEBUG ,
enable debugging information on stderr.
.Pp
If
.Ar nul_terminate
is non-zero,
.Fn cmb_print
will print combination items separated by ASCII NUL character
.Pq character code 0 .
Otherwise,
if
.Ar nul_terminate
is zero
.Pq default ,
.Ar delimiter
is used and if unset,
combinations are separated by a single space.
.Pp
If
.Ar show_empty
is non-zero,
the empty set
.Pq consisting of a single combination with no items
is enumerated by
.Fn cmb
/
.Fn cmb_bn
and counted by
.Fn cmb_count
/
.Fn cmb_count_bn .
.Pp
If
.Ar show_numbers
is non-zero,
print combination sequence number before calling
.Fn action .
Combinations are calculated in arithmetic progression,
providing predictable order.
The sequence number can be used as
.Ar start
or
.Ar start_bn
value to begin at that combination.
The sequence number precedes the prefix and is followed by a single space,
regardless of
.Ar delimiter .
.Pp
For each combination,
if
.Ar prefix
is non-NULL it is printed before the first item in each combination and
.Ar suffix ,
if non-NULL,
is printed after the last item.
.Pp
To operate on only a subset or range of subsets,
use
.Ar size_min
and
.Ar size_max .
Only combinations containing at minimum
.Ar size_min
items and at most
.Ar size_max
items will be calculated.
.Pp
To limit the number of combinations that are calculated,
set
.Ar count
to a non-zero value.
.Pp
If
.Ar start
is greater than one,
the
.Nm
library will seek to that number combination before starting.
.Pp
.Ar action_bn ,
.Ar count_bn ,
and
.Ar start_bn
are only available on platforms with OpenSSL
.Xr bn 3
and are used by
.Fn cmb_bn
and
.Fn cmb_count_bn
to overcome limitations by 64-bit integers.
.Pp
.Fn cmb_version
takes
.Li CMB_VERSION
or
.Li CMB_VERSION_LONG
as
.Ar type
and returns string version.
For unknown
.Ar type ,
the text
.Dq not available
is returned.
.Sh HISTORY
The
.Nm
library first appeared in
.Fx 13.0 .
.Sh AUTHORS
.An Devin Teske Aq Mt dteske@FreeBSD.org
