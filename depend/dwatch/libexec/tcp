# -*- tab-width: 4 -*- ;; Emacs
# vi: set filetype=sh tabstop=8 shiftwidth=8 noexpandtab :: Vi/ViM
############################################################ IDENT(1)
#
# $Title: dwatch(8) module for TCP connections $
# $Copyright: 2014-2018 Devin Teske. All rights reserved. $
# $FreeBSD$
#
############################################################ DESCRIPTION
#
# Print addresses when TCP connections are established
#
############################################################ PROBE

case "$PROFILE" in
tcp)
	: ${PROBE:=$( echo \
		tcp:::accept-established, \
		tcp:::accept-refused, \
		tcp:::connect-established, \
		tcp:::connect-refused, \
		tcp:::connect-request )} ;;
tcp-accept)
	: ${PROBE:=tcp:::accept-established, tcp:::accept-refused} ;;
tcp-connect)
	: ${PROBE:=$( echo \
		tcp:::connect-established, \
		tcp:::connect-refused, \
		tcp:::connect-request )} ;;
tcp-established)
	: ${PROBE:=tcp:::accept-established, tcp:::connect-established} ;;
tcp-refused)
	: ${PROBE:=tcp:::accept-refused, tcp:::connect-refused} ;;
*)
	: ${PROBE:="tcp:::$PROFILE"}
esac

############################################################ GLOBALS

#
# This profile does not support these dwatch command-line options
# NB: They are disabled here so they have no effect when profile is loaded
#
unset EXECNAME		# -k name
unset EXECREGEX		# -z regex
unset GROUP		# -g group
unset PID		# -p pid
unset PSTREE		# -R
unset USER		# -u user

############################################################ EVENT TAG

EVENT_TAG=

############################################################ EVENT DETAILS

exec 9<<EOF
	/*
	 * Which function triggered?
	 */
	this->connect = strstr(probename, "connect") != NULL ? 1 : 0;
	this->request = this->connect ? (
		strstr(probename, "request") != NULL ? 1 : 0
	) : 0;
	this->refused = this->request ? 0 : (
		strstr(probename, "refused") != NULL ? 1 : 0
	);

	/*
	 * TCP addresses
	 */
	this->reverse = this->request ||
		(this->refused && ! this->connect) ? 1 : 0;
	this->local = this->reverse ? args[2]->ip_saddr : args[2]->ip_daddr;
	this->remote = this->reverse ? args[2]->ip_daddr : args[2]->ip_saddr;

	/*
	 * IPv6 support
	 */
	this->local6 = strstr(this->local, ":") != NULL ? 1 : 0;
	this->remote6 = strstr(this->remote, ":") != NULL ? 1 : 0;
	this->local = strjoin(strjoin(this->local6 ? "[" : "",
		this->local), this->local6 ? "]" : "");
	this->remote = strjoin(strjoin(this->remote6 ? "[" : "",
		this->remote), this->remote6 ? "]" : "");

	/*
	 * Print connection details (incl. TCP port)
	 */
	printf("%s:%u %s %s:%u",
		this->local,
		this->reverse ? args[4]->tcp_sport : args[4]->tcp_dport,
		this->connect ? (
			this->request ? "-?" : (
				this->refused ? "-X" : "->"
			)
		) : (this->refused ? "X-" : "<-"),
		this->remote,
		this->reverse ? args[4]->tcp_dport : args[4]->tcp_sport);
EOF
EVENT_DETAILS=$( cat <&9 )

################################################################################
# END
################################################################################

