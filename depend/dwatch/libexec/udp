# -*- tab-width: 4 -*- ;; Emacs
# vi: set filetype=sh tabstop=8 shiftwidth=8 noexpandtab :: Vi/ViM
############################################################ IDENT(1)
#
# $Title: dwatch(8) module for dtrace_udp(4) $
# $Copyright: 2014-2018 Devin Teske. All rights reserved. $
# $FreeBSD$
#
############################################################ DESCRIPTION
#
# Display bytes sent/received when UDP I/O occurs
#
############################################################ PROBE

case "$PROFILE" in
        udp) : ${PROBE:=udp:::send, udp:::receive} ;;
   udp-send) : ${PROBE:=udp:::send} ;;
udp-receive) : ${PROBE:=udp:::receive} ;;
          *) : ${PROBE:=udp:::$PROFILE}
esac

############################################################ GLOBALS

#
# This profile does not support these dwatch command-line options
# NB: They are disabled here so they have no effect when profile is loaded
#
unset EXECNAME		# -k name
unset EXECREGEX		# -z regex
unset GROUP		# -g group
unset PID		# -p pid
unset PSTREE		# -R
unset USER		# -u user

############################################################ EVENT TAG

EVENT_TAG='printf(": ");'

############################################################ EVENT DETAILS

exec 9<<EOF
	/*
	 * Which function triggered?
	 */
	this->send = probename == "send" ? 1 : 0;

	/*
	 * UDP addresses
	 */
	this->local = this->send ? args[2]->ip_saddr : args[2]->ip_daddr;
	this->remote = this->send ? args[2]->ip_daddr : args[2]->ip_saddr;

	/*
	 * IPv6 support
	 */
	this->local6 = strstr(this->local, ":") != NULL ? 1 : 0;
	this->remote6 = strstr(this->remote, ":") != NULL ? 1 : 0;
	this->local = strjoin(strjoin(this->local6 ? "[" : "",
		this->local), this->local6 ? "]" : "");
	this->remote = strjoin(strjoin(this->remote6 ? "[" : "",
		this->remote), this->remote6 ? "]" : "");

	/*
	 * Print connection details (incl. UDP port)
	 */
	printf("%s:%u %s %s:%u [%d bytes]",
		this->local,
		this->send ? args[4]->udp_sport : args[4]->udp_dport,
		this->send ? "->" : "<-",
		this->remote,
		this->send ? args[4]->udp_dport : args[4]->udp_sport,
		args[4]->udp_length);
EOF
EVENT_DETAILS=$( cat <&9 )

################################################################################
# END
################################################################################

