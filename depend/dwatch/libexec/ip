# -*- tab-width: 4 -*- ;; Emacs
# vi: set filetype=sh tabstop=8 shiftwidth=8 noexpandtab :: Vi/ViM
############################################################ IDENT(1)
#
# $Title: dwatch(8) module for TCP connections $
# $Copyright: 2014-2018 Devin Teske. All rights reserved. $
# $FreeBSD$
#
############################################################ DESCRIPTION
#
# Print addresses when TCP connections are established
#
############################################################ PROBE

case "$PROFILE" in
        ip) : ${PROBE:="ip:::send, ip:::receive"} ;;
   ip-send) : ${PROBE:="ip:::send"} ;;
ip-receive) : ${PROBE:="ip:::receive"} ;;
         *) : ${PROBE:="ip:::$PROFILE"}
esac

############################################################ GLOBALS

#
# This profile does not support these dwatch command-line options
# NB: They are disabled here so they have no effect when profile is loaded
#
unset EXECNAME		# -k name
unset EXECREGEX		# -z regex
unset GROUP		# -g group
unset PID		# -p pid
unset PSTREE		# -R
unset USER		# -u user

############################################################ EVENT TAG

EVENT_TAG='printf("%s: ", args[3]->if_name);'

############################################################ EVENT DETAILS

exec 9<<EOF
	/*
	 * Which function triggered?
	 */
	this->send = probename == "send" ? 1 : 0;

	/*
	 * UDP addresses
	 */
	this->local = this->send ? args[2]->ip_saddr : args[2]->ip_daddr;
	this->remote = this->send ? args[2]->ip_daddr : args[2]->ip_saddr;

	/*
	 * Print connection details
	 */
	printf("%s %s %s [%d bytes]",
		this->local,
		this->send ? "->" : "<-",
		this->remote,
		args[2]->ip_plength);
EOF
EVENT_DETAILS=$( cat <&9 )

################################################################################
# END
################################################################################

